/*
 * ultrasonic.c
 *
 *  Created on: Oct 23, 2023
 *      Author: Wooseong Jung
 */
#include "ultrasonic.h"
#include "delay.h"

uint32_t INC_Value_L1 = 0; // Echo High?��?�� ?���??????????
uint32_t INC_Value_L2 = 0; // Echo Low ?��?�� ?���??????????
uint32_t echoTime_L = 0; // Distance(?���?????????? 거리)�?????????? 측정?���?????????? ?��?�� Echo Time()
uint8_t captureFlag_L = 0;
uint8_t distance_L = 0;

uint32_t INC_Value_M1 = 0; // Echo High?��?�� ?���??????????
uint32_t INC_Value_M2 = 0; // Echo Low ?��?�� ?���??????????
uint32_t echoTime_M = 0; // Distance(?���?????????? 거리)�?????????? 측정?���?????????? ?��?�� Echo Time()
uint8_t captureFlag_M = 0;
uint8_t distance_M = 0;

uint32_t INC_Value_R1 = 0; // Echo High?��?�� ?���??????????
uint32_t INC_Value_R2 = 0; // Echo Low ?��?�� ?���??????????
uint32_t echoTime_R = 0; // Distance(?���?????????? 거리)�?????????? 측정?���?????????? ?��?�� Echo Time()
uint8_t captureFlag_R = 0;
uint8_t distance_R = 0;

uint8_t filter_cnt = 0;
uint16_t sum_L = 0;
uint16_t sum_M = 0;
uint16_t sum_R = 0;
uint8_t distance_L_f = 0;
uint8_t distance_M_f = 0;
uint8_t distance_R_f = 0;

uint8_t ult_stg = 0;

//void HCSR04_Read(void)
//{
////	HAL_GPIO_WritePin(TRIG_L_PORT, TRIG_L_PIN, 1); // Trig Pin High
////	HAL_GPIO_WritePin(TRIG_M_PORT, TRIG_M_PIN, 1); // Trig Pin High
////	HAL_GPIO_WritePin(TRIG_R_PORT, TRIG_R_PIN, 1); // Trig Pin High
//	HAL_GPIO_WritePin(TRIG_PORT, TRIG_PIN, 1); // Trig Pin High
//	delay_us(10);							   // Delay 10us
//	HAL_GPIO_WritePin(TRIG_PORT, TRIG_PIN, 0); // Trig Pin High
////	HAL_GPIO_WritePin(TRIG_L_PORT, TRIG_L_PIN, 0); // Trig Pin High
////	HAL_GPIO_WritePin(TRIG_M_PORT, TRIG_M_PIN, 0); // Trig Pin High
////	HAL_GPIO_WritePin(TRIG_R_PORT, TRIG_R_PIN, 0); // Trig Pin High
//
//	__HAL_TIM_ENABLE_IT(&htim3, TIM_IT_CC1); // Set Timer Enable
//	__HAL_TIM_ENABLE_IT(&htim3, TIM_IT_CC2); // Set Timer Enable
//	__HAL_TIM_ENABLE_IT(&htim3, TIM_IT_CC3); // Set Timer Enable
//}
//
//
//void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
//{
//	if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1) // 만약 ?��?��?��?�� ?��?�� 채널?���??????????,(?��리�? 1�?????????? 채널?�� ?��기로 ?��?��)
//	{
//		if(captureFlag_L == 0) // �?????????? 번째 캡쳐�?????????? ?���?????????? ?��?��?���??????????,(Falling Edge�?????????? 발생?���?????????? ?��?��?���??????????,)
//		{
//			INC_Value_L1 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1); // �?????????? 번째 Value�?????????? ?��?��?��.
//			captureFlag_L = 1; // �?????????? 번째 캡쳐 ?���??????????
//
//			// Polarity �??????????�??????????(Rising -> Falling)
//			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_FALLING); // Echo Falling?�� 캡쳐?��?�� ?���??????????�??????????
//		}
//		else if(captureFlag_L == 1) // 만약 �?????????? 번�?? 캡쳐�?????????? ?���?????????? ?��료됐?���??????????,
//		{
//			INC_Value_L2 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
////			__HAL_TIM_SET_COUNTER(&htim3, 0); // reset Counter
//
//			if(INC_Value_L2 > INC_Value_L1)
//			{
//				echoTime_L = INC_Value_L2 - INC_Value_L1;
//			}
//			else if(INC_Value_L1 > INC_Value_L2) // 거리�?????????? ?���?????????? 길면, INC_Value2 �?????????? Overflow?��?�� count�?????????? 0?���?????????? ?�� ?��?��?��?�� INC_Value1보다 ?��?���?????????? ?�� ?��?��.
//			{
//				echoTime_L = (0xffff - INC_Value_L1) + INC_Value_L2;
//			}
//			distance_L = echoTime_L / 58;
//			captureFlag_L = 0;
//
//			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_RISING); // ?��?�� Echo High�?????????? 캡쳐?��?���?????????? ?��?��
//			__HAL_TIM_DISABLE_IT(&htim3, TIM_IT_CC1);
//		}
//	}
//	if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_2) // 만약 ?��?��?��?�� ?��?�� 채널?���??????????,(?��리�? 1�?????????? 채널?�� ?��기로 ?��?��)
//	{
//		if(captureFlag_M == 0) // �?????????? 번째 캡쳐�?????????? ?���?????????? ?��?��?���??????????,(Falling Edge�?????????? 발생?���?????????? ?��?��?���??????????,)
//		{
//			INC_Value_M1 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_2); // �?????????? 번째 Value�?????????? ?��?��?��.
//			captureFlag_M = 1; // �?????????? 번째 캡쳐 ?���??????????
//
//			// Polarity �??????????�??????????(Rising -> Falling)
//			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_2, TIM_INPUTCHANNELPOLARITY_FALLING); // Echo Falling?�� 캡쳐?��?�� ?���??????????�??????????
//		}
//		else if(captureFlag_M == 1) // 만약 �?????????? 번�?? 캡쳐�?????????? ?���?????????? ?��료됐?���??????????,
//		{
//			INC_Value_M2 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_2);
////			__HAL_TIM_SET_COUNTER(&htim3, 0); // reset Counter
//
//			if(INC_Value_M2 > INC_Value_M1)
//			{
//				echoTime_M = INC_Value_M2 - INC_Value_M1;
//			}
//			else if(INC_Value_M1 > INC_Value_M2) // 거리�?????????? ?���?????????? 길면, INC_Value2 �?????????? Overflow?��?�� count�?????????? 0?���?????????? ?�� ?��?��?��?�� INC_Value1보다 ?��?���?????????? ?�� ?��?��.
//			{
//				echoTime_M = (0xffff - INC_Value_M1) + INC_Value_M2;
//			}
//			distance_M = echoTime_M / 58;
//			captureFlag_M = 0;
//
//			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_2, TIM_INPUTCHANNELPOLARITY_RISING); // ?��?�� Echo High�?????????? 캡쳐?��?���?????????? ?��?��
//			__HAL_TIM_DISABLE_IT(&htim3, TIM_IT_CC2);
//		}
//	}
//	if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_3) // 만약 ?��?��?��?�� ?��?�� 채널?���??????????,(?��리�? 1�?????????? 채널?�� ?��기로 ?��?��)
//	{
//		if(captureFlag_R == 0) // �?????????? 번째 캡쳐�?????????? ?���?????????? ?��?��?���??????????,(Falling Edge�?????????? 발생?���?????????? ?��?��?���??????????,)
//		{
//			INC_Value_R1 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_3); // �?????????? 번째 Value�?????????? ?��?��?��.
//			captureFlag_R = 1; // �?????????? 번째 캡쳐 ?���??????????
//
//			// Polarity �??????????�??????????(Rising -> Falling)
//			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_3, TIM_INPUTCHANNELPOLARITY_FALLING); // Echo Falling?�� 캡쳐?��?�� ?���??????????�??????????
//		}
//		else if(captureFlag_R == 1) // 만약 �?????????? 번�?? 캡쳐�?????????? ?���?????????? ?��료됐?���??????????,
//		{
//			INC_Value_R2 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_3);
////			__HAL_TIM_SET_COUNTER(&htim3, 0); // reset Counter
//
//			if(INC_Value_R2 > INC_Value_R1)
//			{
//				echoTime_R = INC_Value_R2 - INC_Value_R1;
//			}
//			else if(INC_Value_R1 > INC_Value_R2) // 거리�?????????? ?���?????????? 길면, INC_Value2 �?????????? Overflow?��?�� count�?????????? 0?���?????????? ?�� ?��?��?��?�� INC_Value1보다 ?��?���?????????? ?�� ?��?��.
//			{
//				echoTime_R = (0xffff - INC_Value_R1) + INC_Value_R2;
//			}
//			distance_R = echoTime_R / 58;
//			captureFlag_R = 0;
//
//			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_3, TIM_INPUTCHANNELPOLARITY_RISING); // ?��?�� Echo High�?????????? 캡쳐?��?���?????????? ?��?��
//			__HAL_TIM_DISABLE_IT(&htim3, TIM_IT_CC3);
//		}
//	}
//
////	if(filter_cnt > 10) filter_cnt = 0;
////	else filter_cnt++;
//	if(filter_cnt < FILTER_CNT)
//	{
//		sum_L = sum_L + distance_L;
//		sum_M = sum_M + distance_M;
//		sum_R = sum_R + distance_R;
//		filter_cnt++;
//	}
//	else
//	{
//		filter_cnt = 0;
//		distance_L_f = sum_L / FILTER_CNT;
//		distance_M_f = sum_M / FILTER_CNT;
//		distance_R_f = sum_R / FILTER_CNT;
//		sum_L = 0;
//		sum_M = 0;
//		sum_R = 0;
//		printf("L : %d, M : %d, R : %d\r\n", distance_L_f, distance_M_f, distance_R_f);
//	}
////	__HAL_TIM_SET_COUNTER(&htim3, 0); // reset Counter
//}


void HCSR04_Read_L(void)
{
//	HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 1);
//	delay_us(10);
//	HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 0);
//	__HAL_TIM_ENABLE_IT(&htim3, TIM_IT_CC1); // Set Timer Enable
	if(ult_stg = 1)
	{
		HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 1);
		delay_us(10);
		HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 0);
		__HAL_TIM_ENABLE_IT(&htim3, TIM_IT_CC1); // Set Timer Enable
	}
}
void HCSR04_Read_M(void)
{
//	HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 1);
//	delay_us(10);
//	HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 0);
//	__HAL_TIM_ENABLE_IT(&htim3, TIM_IT_CC2); // Set Timer Enable
	if(ult_stg = 2)
	{
		HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 1);
		delay_us(10);
		HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 0);
		__HAL_TIM_ENABLE_IT(&htim3, TIM_IT_CC2); // Set Timer Enable
	}
}
void HCSR04_Read_R(void)
{
//	HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 1);
//	delay_us(10);
//	HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 0);
//	__HAL_TIM_ENABLE_IT(&htim3, TIM_IT_CC3); // Set Timer Enable
	if(ult_stg = 3)
	{
		HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 1);
		delay_us(10);
		HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 0);
		__HAL_TIM_ENABLE_IT(&htim3, TIM_IT_CC3); // Set Timer Enable
	}
}






void HCSR04_Read(void)
{
	if(ult_stg = 1)
	{
		HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 1);
		delay_us(10);
		HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 0);
		__HAL_TIM_ENABLE_IT(&htim3, TIM_IT_CC1); // Set Timer Enable
	}
	if(ult_stg = 2)
	{
		HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 1);
		delay_us(10);
		HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 0);
		__HAL_TIM_ENABLE_IT(&htim3, TIM_IT_CC2); // Set Timer Enable
	}
	if(ult_stg = 3)
	{
		HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 1);
		delay_us(10);
		HAL_GPIO_WritePin(TRIG_GPIO_Port, TRIG_Pin, 0);
		__HAL_TIM_ENABLE_IT(&htim3, TIM_IT_CC3); // Set Timer Enable
	}
}


void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
	if(ult_stg == 1)
	{
	if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1) // 만약 ?��?��?��?�� ?��?�� 채널?���??????????,(?��리�? 1�?????????? 채널?�� ?��기로 ?��?��)
	{
		if(captureFlag_L == 0) // �?????????? 번째 캡쳐�?????????? ?���?????????? ?��?��?���??????????,(Falling Edge�?????????? 발생?���?????????? ?��?��?���??????????,)
		{
			INC_Value_L1 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1); // �?????????? 번째 Value�?????????? ?��?��?��.
			captureFlag_L = 1; // �?????????? 번째 캡쳐 ?���??????????

			// Polarity �??????????�??????????(Rising -> Falling)
			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_FALLING); // Echo Falling?�� 캡쳐?��?�� ?���??????????�??????????
		}
		else if(captureFlag_L == 1) // 만약 �?????????? 번�?? 캡쳐�?????????? ?���?????????? ?��료됐?���??????????,
		{
			INC_Value_L2 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);
//			__HAL_TIM_SET_COUNTER(&htim3, 0); // reset Counter

			if(INC_Value_L2 > INC_Value_L1)
			{
				echoTime_L = INC_Value_L2 - INC_Value_L1;
			}
			else if(INC_Value_L1 > INC_Value_L2) // 거리�?????????? ?���?????????? 길면, INC_Value2 �?????????? Overflow?��?�� count�?????????? 0?���?????????? ?�� ?��?��?��?�� INC_Value1보다 ?��?���?????????? ?�� ?��?��.
			{
				echoTime_L = (0xffff - INC_Value_L1) + INC_Value_L2;
			}
			distance_L = echoTime_L / 58;
			captureFlag_L = 0;

			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_RISING); // ?��?�� Echo High�?????????? 캡쳐?��?���?????????? ?��?��
			__HAL_TIM_DISABLE_IT(&htim3, TIM_IT_CC1);
			ult_stg = 2;
		}
	}
	}
	if(ult_stg == 2)
	{
	if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_2) // 만약 ?��?��?��?�� ?��?�� 채널?���??????????,(?��리�? 1�?????????? 채널?�� ?��기로 ?��?��)
	{
		if(captureFlag_M == 0) // �?????????? 번째 캡쳐�?????????? ?���?????????? ?��?��?���??????????,(Falling Edge�?????????? 발생?���?????????? ?��?��?���??????????,)
		{
			INC_Value_M1 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_2); // �?????????? 번째 Value�?????????? ?��?��?��.
			captureFlag_M = 1; // �?????????? 번째 캡쳐 ?���??????????

			// Polarity �??????????�??????????(Rising -> Falling)
			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_2, TIM_INPUTCHANNELPOLARITY_FALLING); // Echo Falling?�� 캡쳐?��?�� ?���??????????�??????????
		}
		else if(captureFlag_M == 1) // 만약 �?????????? 번�?? 캡쳐�?????????? ?���?????????? ?��료됐?���??????????,
		{
			INC_Value_M2 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_2);
//			__HAL_TIM_SET_COUNTER(&htim3, 0); // reset Counter

			if(INC_Value_M2 > INC_Value_M1)
			{
				echoTime_M = INC_Value_M2 - INC_Value_M1;
			}
			else if(INC_Value_M1 > INC_Value_M2) // 거리�?????????? ?���?????????? 길면, INC_Value2 �?????????? Overflow?��?�� count�?????????? 0?���?????????? ?�� ?��?��?��?�� INC_Value1보다 ?��?���?????????? ?�� ?��?��.
			{
				echoTime_M = (0xffff - INC_Value_M1) + INC_Value_M2;
			}
			distance_M = echoTime_M / 58;
			captureFlag_M = 0;

			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_2, TIM_INPUTCHANNELPOLARITY_RISING); // ?��?�� Echo High�?????????? 캡쳐?��?���?????????? ?��?��
			__HAL_TIM_DISABLE_IT(&htim3, TIM_IT_CC2);
			ult_stg = 3;
		}
	}
	}
	if(ult_stg == 3)
	{
	if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_3) // 만약 ?��?��?��?�� ?��?�� 채널?���??????????,(?��리�? 1�?????????? 채널?�� ?��기로 ?��?��)
	{
		if(captureFlag_R == 0) // �?????????? 번째 캡쳐�?????????? ?���?????????? ?��?��?���??????????,(Falling Edge�?????????? 발생?���?????????? ?��?��?���??????????,)
		{
			INC_Value_R1 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_3); // �?????????? 번째 Value�?????????? ?��?��?��.
			captureFlag_R = 1; // �?????????? 번째 캡쳐 ?���??????????

			// Polarity �??????????�??????????(Rising -> Falling)
			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_3, TIM_INPUTCHANNELPOLARITY_FALLING); // Echo Falling?�� 캡쳐?��?�� ?���??????????�??????????
		}
		else if(captureFlag_R == 1) // 만약 �?????????? 번�?? 캡쳐�?????????? ?���?????????? ?��료됐?���??????????,
		{
			INC_Value_R2 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_3);
//			__HAL_TIM_SET_COUNTER(&htim3, 0); // reset Counter

			if(INC_Value_R2 > INC_Value_R1)
			{
				echoTime_R = INC_Value_R2 - INC_Value_R1;
			}
			else if(INC_Value_R1 > INC_Value_R2) // 거리�?????????? ?���?????????? 길면, INC_Value2 �?????????? Overflow?��?�� count�?????????? 0?���?????????? ?�� ?��?��?��?�� INC_Value1보다 ?��?���?????????? ?�� ?��?��.
			{
				echoTime_R = (0xffff - INC_Value_R1) + INC_Value_R2;
			}
			distance_R = echoTime_R / 58;
			captureFlag_R = 0;

			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_3, TIM_INPUTCHANNELPOLARITY_RISING); // ?��?�� Echo High�?????????? 캡쳐?��?���?????????? ?��?��
			__HAL_TIM_DISABLE_IT(&htim3, TIM_IT_CC3);
			ult_stg = 1;
		}
	}
	}
}

//void distance_filter()
//{
//	if(filter_cnt < 10)
//	{
//		sum_L = sum_L + distance_L;
//		sum_M = sum_M + distance_M;
//		sum_R = sum_R + distance_R;
//	}
//	else
//	{
//		distance_L_f = sum_L / 10;
//		distance_M_f = sum_M / 10;
//		distance_R_f = sum_R / 10;
//		printf("L : %d, M : %d, R : %d\r\n", distance_L_f, distance_M_f, distance_R_f);
//	}
//}

//void print_distance()
//{
//	printf("L : %d, M : %d, R : %d\r\n", distance_L_f, distance_M_f, distance_R_f);
//}

